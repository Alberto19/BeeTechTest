{"version":3,"names":[],"mappings":"","sources":["script.js"],"sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('app', ['ui.router'])\n        .config(['$httpProvider', function ($httpProvider) {\n            // Add http interceptors\n            $httpProvider.interceptors.push('authInterceptor');\n        }])\n        .run(['$rootScope', '$state', 'authData', function ($rootScope, $state, authData) {\n            // Page changed event\n            $rootScope.$on('$stateChangeStart', function (event, next, current) {\n                var token = authData.getToken();\n\n                // Check for valid token\n                if (!token && next.name != 'login') {\n                    // Cancel redirect\n                    event.preventDefault();\n\n                    // Force redirect to login again\n                    $state.go('login');\n                }\n            });\n\n            // Global forbidden event\n            $rootScope.$on('forbidden', function () {\n                // Force redirect to login again\n                $state.go('login');\n            });\n        }]);\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .config(['$locationProvider', '$stateProvider', '$urlRouterProvider', function ($locationProvider, $stateProvider, $urlRouterProvider) {\n            // Use URLs without hash\n            $locationProvider.html5Mode(true);\n\n            // Login routes\n            $stateProvider\n                .state('login', {\n                    url: '/login',\n                    controller: 'LoginController as vm',\n                    templateUrl: 'views/layouts/login.html'\n                })\n\n                // Home routes\n                .state('main', {\n                    abstract: true,\n                    url: '/main',\n                    controller: 'LayoutController as vm',\n                    templateUrl: 'views/layouts/main.html',\n                })\n\n                // Desejo routes\n                .state('main.desejo', {\n                    url: '^/desejo',\n                    template: '<ui-view/>'\n                })\n                .state('main.desejo.list', {\n                    url: '/listar',\n                    controller: 'ListDesejoController as vm',\n                    templateUrl: 'views/partials/desejo.html'\n                })\n                .state('main.desejo.create', {\n                    url: '/create',\n                    controller: 'createDesejoController as vm',\n                    templateUrl: 'views/partials/desejo.form.html'\n                })\n                .state('main.desejo.edit', {\n                    url: '/edit/:desejoId',\n                    controller: 'editDesejoController as vm',\n                    templateUrl: 'views/partials/desejo.form.html'\n                })\n\n\n            // Redirect invalid routes to home page\n            $urlRouterProvider.otherwise('/desejo/listar');\n        }]);\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .factory('config', config);\n\n    function config() {\n        return {\n            baseApiUrl: \"https://bee-test.herokuapp.com\"\n            // baseApiUrl: \"http://localhost:3001/api\"\n        };\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .factory('auth', auth);\n\n    auth.$inject = ['$http', 'authData', 'config'];\n\n    function auth($http, authData, config) {\n        var service = {\n            login: login,\n            register: register,\n            logout: logout\n        };\n\n        return service;\n\n        ////////////////\n        function login(email, password) {\n            return $http.post(config.baseApiUrl + '/user/login', {\n                email: email,\n                senha: password\n            }).then(\n                function (data) {\n                    var loginData = data.data;\n\n                    authData.parseData(loginData);\n                },\n                function (data) {\n                    console.log(data);\n                }\n            );\n        }\n\n        function register(nome, email, password) {\n            return $http.post(config.baseApiUrl + '/user/create', {\n                nome: nome,\n                email: email,\n                senha: password\n            }).then(\n                function (data) {\n                    var loginData = data.data;\n\n                    authData.parseData(loginData);\n                },\n                function (data) {\n                    console.log(data);\n                }\n            );\n        }\n\n        function logout() {\n            authData.clearData();\n        }\n    }\n})();\n(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('app')\n\t\t.factory('authData', authData);\n\n\tauthData.$inject = ['$window'];\n\n\tfunction authData($window) {\n\t\t/** Cached Instances **/\n\t\tvar cachedToken = null;\n\n\t\t/* Service */\n\t\tvar service = {\n\t\t\tparseData: parseData,\n\t\t\tclearData: clearData,\n\n\t\t\tgetToken: getToken,\n\t\t\tsetToken: setToken,\n\t\t};\n\n\t\treturn service;\n\n\t\t////////////////\n\n\t\t/* Login Data */\n\t\tfunction parseData(data) {\n\t\t\tsetToken(data.token);\n\t\t}\n\n\t\tfunction clearData() {\n\t\t\tsetToken();\n\t\t}\n\n\t\t/* API Token - Value */\n\t\tfunction getToken() {\n\t\t\tif (!cachedToken) {\n\t\t\t\tvar value = $window.sessionStorage.getItem('token');\n\t\t\t\tcachedToken = value ? value : null;\n\t\t\t}\n\n\t\t\treturn cachedToken;\n\t\t}\n\n\t\tfunction setToken(token) {\n\t\t\tcachedToken = token;\n\n\t\t\tif (token) {\n\t\t\t\t$window.sessionStorage.setItem('token', token);\n\t\t\t}else{\n\t\t\t$window.sessionStorage.removeItem('token');\n\t\t\t}\n\n\t\t}\n\t}\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .factory('authInterceptor', authInterceptor);\n\n    authInterceptor.$inject = ['$rootScope', '$q', 'authData'];\n\n    function authInterceptor($rootScope, $q, authData) {\n        var service = {\n            request: request,\n            responseError: responseError\n        };\n\n        return service;\n\n        ////////////////\n\n        function request(config) {\n            var token = authData.getToken();\n\n            // Inject API token on all requests\n            if (token) {\n                config.headers['x-access-token'] = token;\n            }\n\n            return config;\n        }\n\n        function responseError(response) {\n            // Forbidden response\n            if (response.status == 403) {\n                // Remove login data\n                authData.clearData();\n\n                // Emit global forbidden event\n                $rootScope.$emit('forbidden');\n            }\n\n            return $q.reject(response);\n        }\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .factory('Desejo', Desejo);\n\n    Desejo.$inject = ['$http', 'config'];\n\n    function Desejo($http, config) {\n        var service = {\n            getDesejos: getDesejos,\n            cadastrar:cadastrar,\n            getDesejo:getDesejo,\n            editar:editar,\n            deletar:deletar\n        };\n\n        return service;\n\n        ////////////////\n        function getDesejos() {\n            return $http.get(config.baseApiUrl + '/desejo');\n        };\n        function cadastrar(desejo){\n            return $http.post(config.baseApiUrl + '/desejo/create', desejo);\n        };\n        function getDesejo(desejo) {\n            return $http.get(config.baseApiUrl + '/desejo/edit/' + desejo);\n        }\n        function editar(desejo) {\n            return $http.post(config.baseApiUrl + '/desejo/editar/', desejo);\n        }\n        function deletar(desejo) {\n            return $http.post(config.baseApiUrl + '/desejo/delete/' + desejo);\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .component('navigation', {\n            templateUrl: 'components/html/navigation.component.html',\n            controller: NavigationController,\n            bindings: {\n                logout: '&',\n            },\n        });\n\n    function NavigationController() {\n        var $ctrl = this;\n\n        ////////////////\n\n        $ctrl.$onInit = function () {};\n        $ctrl.$onChanges = function (changesObj) {};\n        $ctrl.$onDestory = function () {};\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .component('user', {\n            templateUrl: 'components/html/user.component.html',\n            controller: UserController,\n            bindings: {\n                logout: '&',\n            },\n        });\n\n    function UserController() {\n        var $ctrl = this;\n\n        ////////////////\n\n        $ctrl.$onInit = function () {};\n        $ctrl.$onChanges = function (changesObj) {};\n        $ctrl.$onDestory = function () {};\n\n    }\n})();\n\n(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('app')\n\t\t.controller('createDesejoController', createDesejoController);\n\n\tcreateDesejoController.$inject = ['$state', 'Desejo'];\n\n\tfunction createDesejoController($state, Desejo) {\n\t\tvar vm = this;\n\t\tvm.title = 'Cadastrar - Desejos';\n\t\tvm.desejos = {\n\t\t\tnome: null,\n\t\t\tdescricao: null,\n\t\t\tvalor: null\n\t\t};\n\t\tvm.submit = 'Cadastrar Desejo';\n\n\t\tvm.cadastrar = cadastrar;\n\n\t\t////////////////\n\t\tfunction cadastrar() {\n\t\t\tDesejo.cadastrar(vm.desejos).then(\n\t\t\t\tfunction () {\n\t\t\t\t\t$state.go('main.desejo.list')\n\t\t\t\t},\n\t\t\t\tfunction (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('editDesejoController', editDesejoController);\n\n    editDesejoController.$inject = ['$state', 'Desejo', '$stateParams'];\n\n    function editDesejoController($state, Desejo, $stateParams) {\n        var vm = this;\n        vm.title = 'Editar - Usuário'\n        vm.desejos = {\n            nome: null,\n            descricao: null,\n            valor: null\n        };\n        vm.submit = 'Editar Desejo';\n\n        vm.cadastrar = editar;\n\n        getDesejo();\n\n        ////////////////\n\n        function getDesejo() {\n            var desejoId = $stateParams.desejoId;\n\n            Desejo.getDesejo(desejoId).then(\n                function (desejo) {\n                    vm.desejos = desejo.data;\n                },\n                function (error) {\n                    console.log(error);\n                }\n            );\n        }\n\n        function editar() {\n            Desejo.editar(vm.desejos).then(\n                function () {\n                    $state.go('main.desejo.list')\n                },\n                function (err) {\n                    console.log(err);\n                }\n            )\n        }\n\n\n\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('ListDesejoController', ListDesejoController);\n\n    ListDesejoController.$inject = ['Desejo'];\n\n    function ListDesejoController(Desejo) {\n        var vm = this;\n        vm.title = 'Listar - Desejos';\n        vm.desejos = null;\n        vm.delete = deletar;\n\n        getDesejos();\n\n          function getDesejos() {\n            Desejo.getDesejos().then(\n                function (desejos) {\n                    vm.desejos = desejos.data;\n                },\n                function (error) {\n                    console.log(error);\n                });\n        }\n\n        function deletar(id){\n            Desejo.deletar(id).then(()=>{\n                getDesejos();\n            })\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('LayoutController', LayoutController);\n\n    LayoutController.$inject = ['auth', '$state'];\n\n    function LayoutController(auth, $state) {\n        var vm = this;\n\n        vm.logout = logout;\n        vm.desejos = desejos;\n\n        function logout() {\n            auth.logout();\n            $state.go('login');\n        }\n        function desejos() {\n            $state.go('login');\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('LoginController', LoginController);\n\n    LoginController.$inject = ['$state', 'auth'];\n\n    function LoginController($state, auth) {\n        var vm = this;\n\n        vm.email = 'junior@gmail.com';\n        vm.password = '12345';\n        vm.login = login;\n        ////////////////\n\n        function login() {\n            auth.login(vm.email, vm.password).then(\n                function () {\n                    $state.go('main.desejo.list');\n                },\n                function (data) {\n                    console.log(data);\n                });\n        }\n    }\n})();\n"],"file":"script.js"}